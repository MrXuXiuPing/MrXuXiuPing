server:
  port: 8021
task:
  pool:
    # 核心线程池大小
    core-pool-size: 10
    # 最大线程数
    max-pool-size: 30
    # 活跃时间
    keep-alive-seconds: 60
    # 队列容量
    queue-capacity: 50
mq:
  env: local
order: #订单处理队列
  mq:
    exchange: #交换机名称
      name: ${mq.env}:order:mq:exchange
    queue: #队列名称
      name: ${mq.env}:order:mq:queue
    routing: #routingkey
      key: ${mq.env}:order:mq:routing:key
    ttl: 5000
pay: #支付处理队列
  dead-letter:
    mq:
      exchange: #死信交换机（DLX)
        name: ${mq.env}:pay:dead-letter:mq:exchange
      queue: #死信队列名称
        name: ${mq.env}:pay:dead-letter:mq:queue
      routing: #死信routingkey(DLK)
        key: ${mq.env}:pay:dead-letter:mq:routing:key
  mq:
    exchange: #交换机名称
      name: ${mq.env}:pay:mq:exchange
    queue: #队列名称
      name: ${mq.env}:pay:mq:queue
    routing: #routingkey
      key: ${mq.env}:pay:mq:routing:key
    ttl: 5000  #支付超时时间（毫秒）（TTL）,测试原因，这里模拟5秒，如果是生产环境，这里可以是15分钟等

spring:
  #给项目来个名字
  application:
    name: mall-rabbitmq-provider
  #配置rabbitMq 服务器
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    #虚拟host 可以不设置,使用server默认host
#    virtual-host: /
      #消息确认配置项
      #确认消息已发送到交换机(Exchange)
    publisher-confirms: true
#      #确认消息已发送到队列(Queue) , 开启发送失败退回（消息有没有找到合适的队列）
    publisher-returns: true
#